#vim 下
:!echo $PATH

#-e exist
if [ -e "filename" ];then
    echo "file $filename exists"



# ;;双分号 ，是case代码的结束符

variable='abc'
case "$variable" in
abc)
    echo "\$variable = abc";;
xyz)
    echo "\$variable = axyz";;
esac

#引号 双引号：会发生变量替换 单引号：不会发生变量替换
#echo $PWD
/root

#echo "$PWD"
/root
#echo '$PWD'
$PWD

echo $HELLO. -> echo $[HELLO]

#逗号操作符
#用于连接多个算术操作，并返回最后一项
let "t1 = ((a = 9,15 / 3))"
echo "t1 = $t1".  ->t1=5

#斜线 \反斜线  /正斜线
#转义符
\$  \"  \'

# ``反引号，命令替换

echo $0
script_name=`basename $0`
echo $script_name

script_name=`basename -s .sh  $0`
echo $script_name

# ：冒号。命令执行成功，状态码为0 ，如果失败，状态码为1
echo $?   #返回上一条执行命令的状态码

while : ->while true
if condition
then :
else
    take-some-action
file

: >test.txt.  #清空文件，但不会改变文件权限

！取反操作符
#反转命令退出状态码
#反转测试操作符的意义

! true #注意空格

#定义退出状态码
exit 88 ->0-255
echo $?  ->88









