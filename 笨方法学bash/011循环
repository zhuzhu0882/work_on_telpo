#for循环
for arg in [list]
do
    command(s)
done

#在循环的每次执行中，[list]中的值按顺序赋值给变量arg
for fruit in "Apple 1" "Brange 2"
do
    set - $fruit.  #分割
    echo "$1:$2 kg"
done

ls -l $strfile | awk '{print $9 ":size:" $5}'

for file in [ct]*.    #c或t开头的
do
    :
done

done ｜sort >>file.txt重新排序，重定向到文件

while循环
while [condition]
do  
    command
done

while [[ command ]]

C风格
{{ a = 1 }}
{{ LIMIT = 100}}
while {{ a <=LIMIT }}
do
    {{ a += 1}}
done

while和read结合
cat /etc/hosts |
while read line1
do  
    echo "$line1"
done

until. 和while相反
END_CONDITION=end
until [ "val1" = "$END_CONDITION" ]
do
    read var1
    echo "$var1"
done

循环控制
break.  跳出循环
continue. 忽略本次循环的剩余代码，跳到循环头部
#break和continue均可通过参数指定级别
break 2. 跳出2层嵌套
continue 2. 跳2级


read Keypress
case "$Keypress" in
    [0-9] ) echo "0-9";;
    * ) echo "all";;
esac

$#. 所有参数
shift   检查剩余参数

select variable [in list].  等待用户选择
do
    commands
    break
done

命令替换
s_name=`basename $0`


